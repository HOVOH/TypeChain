/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import { Contract as MulticallContract } from "@hovoh/ethers-multicall";
import type {
  Payable,
  PayableInterface,
  PayableMulticall,
} from "../../../v0.6.4/Payable/Payable";

const _abi = [
  {
    inputs: [],
    name: "non_payable_func",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "payable_func",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

export class Payable__factory {
  static readonly abi = _abi;
  static createInterface(): PayableInterface {
    return new utils.Interface(_abi) as PayableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payable {
    return new Contract(address, _abi, signerOrProvider) as Payable;
  }

  static multicall(address: string): PayableMulticall {
    return new MulticallContract(address, _abi) as unknown as PayableMulticall;
  }
}
